{
  "#": "NOT recommend to edit manually. Write carefully! This file is generated by code-prism vscode extension.",
  "ver": "1.0.0",
  "name": "scala-script",
  "issues": [
    {
      "id": "a2545d528ed9ea04ba91e851ebd8609e",
      "title": "`ArrayType:` at language\\scala-script.langium#62",
      "source": {
        "file": "/language/scala-script.langium",
        "startLine": 57,
        "startColumn": 0,
        "endLine": 57,
        "endColumn": 63
      },
      "notes": [
        {
          "id": "0381fafecc273fadfb98edce85bf1707",
          "category": "Bugs",
          "importance": "Medium",
          "createdAt": "2024-11-19T07:41:53.300Z",
          "content": "ArrayType을 아래와 같이 선언하면\r\n\r\n```\r\nArrayType:\r\n  elementType=(ObjectType | ElementType) '[' ']';\r\n```\r\n\r\nElementType에 FunctionType이 포함되어져 있어 다음과 같은 것이 파싱되지 않는다.\r\n\r\n`var t: (arg: number) -> number[]`\r\n\r\n`(arg: number) -> number` 의 배열로 인식된다."
        }
      ]
    },
    {
      "id": "a2b95ea3bb811fbce6f03ad21772934c",
      "title": "`// Parentheses` at language\\scala-script.langium#499",
      "source": {
        "file": "/language/scala-script.langium",
        "startLine": 535,
        "startColumn": 0,
        "endLine": 554,
        "endColumn": 0
      },
      "notes": [
        {
          "id": "f02b7a2b44e56cfcf86a160f1d0d054b",
          "category": "Todo",
          "importance": "Medium",
          "createdAt": "2024-11-29T17:42:38.462Z",
          "content": "이 부분도 정리해야 하는데..."
        }
      ]
    },
    {
      "id": "f800f21e7790762937274628f71fb370",
      "title": "`TypeChain:` at language\\scala-script.langium#49",
      "source": {
        "file": "/language/scala-script.langium",
        "startLine": 84,
        "startColumn": 0,
        "endLine": 86,
        "endColumn": 0
      },
      "notes": [
        {
          "id": "9d884f9cbfc1ca70e4a94c606efd3113",
          "category": "Todo",
          "importance": "Medium",
          "createdAt": "2024-11-30T02:51:55.981Z",
          "content": "TypeChain은 다음과 같은 경우를 위한 것인데 실제로 이런 경우는 transpile되면 interface안에 inferface가 정의되는 것이기 때문에 error가 된다.\r\n\r\n```ts\r\ndef Corp = {\r\n  def Firm = {\r\n    var name: string\r\n  }\r\n  var firms: Firm[]\r\n}\r\n```\r\n"
        }
      ]
    },
    {
      "id": "415be60f7aff9b23aca9618d3ab17269",
      "title": "`// '{' elements+=ObjectTypeElement? (','? elements+=ObjectTypeElement)* '}';` at language\\scala-script.langium#60",
      "source": {
        "file": "/language/scala-script.langium",
        "startLine": 62,
        "startColumn": 0,
        "endLine": 62,
        "endColumn": 0
      },
      "notes": [
        {
          "id": "5edbc4b905819596b79582b8034aa642",
          "category": "Todo",
          "importance": "Medium",
          "createdAt": "2024-12-04T04:58:34.055Z",
          "content": "이게 정석인데 이 방식을 사용하면 모호성 문제가 생긴다. 어떤 차이가 있는걸까?"
        }
      ]
    }
  ]
}